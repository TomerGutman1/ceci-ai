// Fixes for SQL Query Templates - Replace computed columns with actual SQL

// 1. Fix TOTAL_COUNT - Replace MIN(year)/MAX(year) with EXTRACT
Replace:
        MIN(year) as first_year,
        MAX(year) as last_year
With:
        MIN(EXTRACT(YEAR FROM decision_date)) as first_year,
        MAX(EXTRACT(YEAR FROM decision_date)) as last_year

// 2. Fix COUNT_BY_YEAR - Replace WHERE year = $1 with EXTRACT
Replace:
      WHERE year = $1
With:
      WHERE EXTRACT(YEAR FROM decision_date) = $1

// 3. Fix DECISION_BY_KEY - Don't use decision_key column, use separate columns
Replace entire DECISION_BY_KEY template with:
  DECISION_BY_KEY: {
    name: 'החלטה לפי מפתח',
    description: 'מציאת החלטה לפי מפתח משולב',
    pattern: /decision_key\s*=\s*['"](\d+)_(\d+)['"]/,
    sql: (_gov: string, _decision: string) => `
      SELECT * FROM israeli_government_decisions 
      WHERE government_number = $1 AND decision_number = $2
      LIMIT 1
    `,
    params: (gov: string, decision: string) => [parseInt(gov), decision],
    expectedType: 'single',
    examples: ['decision_key = "37_660"']
  },

// 4. Also need to fix GOVERNMENT_STATISTICS - the ARRAY_AGG with UNNEST might not work
Replace:
        ARRAY_AGG(DISTINCT UNNEST(string_to_array(tags_policy_area, '; '))) as policy_areas,
With:
        STRING_AGG(DISTINCT tags_policy_area, '; ') as policy_areas,
